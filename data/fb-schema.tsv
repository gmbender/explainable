Simplified version of the FQL schema

--- album ---
aid	string	The album ID
backdated_time	timestamp	Time that the album is backdated to
can_backdate	bool	Can the album be backdated on Timeline
can_upload	bool	Determines whether a given UID can upload to the album. It is true if the following conditions are met: The user owns the album, the album is not a special album like the profile pic album, the album is not full.
comment_info	struct	The comment information of the album being queried. This is an object containing can_comment and comment_count
cover_object_id	numeric string	The album cover photo object_id
cover_pid	string	The album cover photo ID string
created	timestamp	The time the photo album was initially created expressed as UNIX time.
description	string	The description of the album
edit_link	string	The URL for editing the album
is_user_facing	bool	Determines whether or not the album should be shown to users.
like_info	struct	The like information of the album being queried. This is an object containing can_like, like_count, and user_likes
link	string	A link to this album on Facebook
location	string	The location of the album
modified	timestamp	The last time the photo album was updated expressed as UNIX time.
modified_major	timestamp	Indicates the time a major update (like addition of photos) was last made to the album expressed as UNIX time.
name	string	The title of the album
object_id	id	The object_id of the album on Facebook. This is used to identify the equivalent Album object in the Graph API. You can also use the object_id to let users comment on an album with the Graph API Comments
owner	id	The user ID of the owner of the album
owner_cursor	string	Cursor for the owner field
photo_count	unsigned int32	The number of photos in the album
place_id	numeric string	Facebook ID of the place associated with the album, if any.
type	string	The type of photo album. Can be one of profile: The album containing profile pictures, mobile: The album containing mobile uploaded photos, wall: The album containing photos posted to a user's Wall, normal: For all other albums.
video_count	unsigned int32	The number of videos in the album
visible	string	Visible only to the album owner. Indicates who can see the album. The value can be one of friends, friends-of-friends, networks, everyone, custom (if the visibility doesn't match any of the other values)
size	unsigned int32	The number of photos in this album

--- application ---
android_key_hash	array<string>	Android key hash of the app.
api_key	string	The API key of the application being queried.
app_domains	array<string>	Domains and subdomains this app can use. App access_token required.
app_id	numeric string	The ID of the application being queried.
app_name	string	Name of the app.
app_type	bool	Type of the app.
appcenter_icon_url	string	The URL identifying the hi-resolution version of the application's icon image
auth_dialog_data_help_url	string	The URL of a special landing page that helps users of an app begin publishing Open Graph activity. App access_token required.
auth_dialog_headline	string	One line description of an app that appears in the Auth Dialog. App access_token required; only returned if specifically requested via the fields URL parameter. string
auth_dialog_perms_explanation	string	The text to explain why an app needs additional permissions that appears in the Auth Dialog. App access_token required.
auth_referral_default_activity_privacy	string	The default privacy setting selected for Open Graph activities in the Auth Dialog. App access_token required; only returned if specifically requested via the fields URL parameter. string which is one of, SELF, EVERYONE, ALL_FRIENDS or NONE.
auth_referral_enabled	bool	Indicates whether Authenticated Referrals are enabled. App access_token required.
auth_referral_extended_perms	array<string>	Extended permissions that a user can choose to grant when Authenticated Referrals are enabled. App access_token required.
auth_referral_friend_perms	array<string>	Basic friends permissions that a user must grant when Authenticated Referrals are enabled. App access_token required.
auth_referral_response_type	string	The format that an app receives the Auth token from the Auth Dialog in. App access_token required; only returned if specifically requested via the fields URL parameter. string which is one of, code or token.
auth_referral_user_perms	array<string>	Basic user permissions that a user must grant when Authenticated Referrals are enabled. App access_token required.
canvas_fluid_height	bool	Indicates whether app uses fluid or settable height values for Canvas. App access_token required.
canvas_fluid_width	bool	Indicates whether app uses fluid or fixed width values for Canvas. App access_token required.
canvas_url	string	The non-secure URL from which Canvas app content is loaded. App access_token required.
category	string	The category the application can be found under.
client_config	object<string, ((bool) or (string)) or (list) or (map)>	Config data for the client
company_name	string	The name of the company that built the application. Note: Only one of company_name and developers will contain data, never both.
configured_ios_sso	bool	True if the app has configured Single Sign On on iOS
contact_email	string	Email address listed for users to contact developers. App access_token required.
created_time	string	UNIX timestamp that indicates when the app was created. App access_token required.
creator_uid	string	User ID of the creator of this app. App access_token required.
daily_active_users	numeric string	The number of Facebook users who've used the application in the last day.
daily_active_users_rank	numeric string	The rank of the daily_active_users metric compared with other applications.
deauth_callback_url	string	URL that is pinged whenever a user removes the app. App access_token required.
description	string	The description of the application, as provided by the developer.
developers	array<object>	A list of records, where each record identifies a Facebook user who is marked as a developer of the application. Note: Only one of company_name and developers will contain data, never both.
display_name	string	The name of the application.
gdpv4_nux_enabled	bool	Indicates whether the NUX for login button must be shown or not.
hosting_url	string	Webspace created with one of our hosting partners for this app. App access_token required.
icon_url	string	The URL identifying the application's icon image.
ios_bundle_id	array<string>	Bundle ID of the associated iOS app.
ipad_app_store_id	string	ID of the app in the iPad App Store. App access_token required.
iphone_app_store_id	string	ID of the app in the iPhone App Store. App access_token required.
is_facebook_app	bool	Whether or not the application is natively developed by Facebook.
link	string	Facebook profile link of the app.
logo_url	string	The URL identifying the application's logo image.
migration_status	object<string, bool>	Status of every valid migration for this app (true means enabled.)
mobile_profile_section_url	string	URL of the app section on a user's profile for the mobile site.
mobile_web_url	string	URL to which Mobile users will be directed when using the app. App access_token required.
monthly_active_users	numeric string	The number of Facebook users who've used the application in the last 30 days.
monthly_active_users_rank	numeric string	The rank of the monthly_active_users metric compared with other applications.
namespace	string	The string appended to apps.facebook.com/ to navigate to the application's canvas page.
page_tab_default_name	string	The title of the app when used in a Page Tab. App access_token required.
page_tab_url	string	The non-secure URL from which Page Tab app content is loaded. App access_token required.
privacy_policy_url	string	The URL that links to a Privacy Policy for the app. App access_token required.
profile_section_url	string	URL of the app section on a user's profile for the desktop site.
restriction_info	struct	Returns demographic restrictions for the app in a object with zero or more of the following fields: type, location, age, and age_distr. See restrictions field on the Graph API Application object for more information.
secure_canvas_url	string	The secure URL from which Canvas app content is loaded. App access_token required.
secure_page_tab_url	string	The secure URL from which Page Tab app content is loaded. App access_token required.
server_ip_whitelist	string	App requests must originate from this comma-separated list of IP addresses. App access_token required.
social_discovery	bool	Indicates whether app usage stories show up in the Ticker or News Feed. App access_token required.
subcategory	string	The subcategory the application can be found under.
supports_attribution	bool	Indicates whether the app has opted out of app install tracking.
supports_implicit_sdk_logging	bool	Indicates whether the app has opted out of the mobile SDKs sending data on SDK interactions.
terms_of_service_url	string	URL to Terms of Service which is linked to in Auth Dialog. App access_token required.
url_scheme_suffix	string	user_support_email
string	Main contact email for this app. App access_token required.  user_support_url
string	URL of support for users of an app shown in Canvas footer. App access_token required.  website_url
string	URL of a website that integrates with this app. App access_token required.  weekly_active_users
numeric	string	The number of Facebook users who've used the application in the last seven days.

--- checkin ---
app_id	id	The ID of an app that made the checkin.
author_uid	id	The ID of the user making the checkin.
checkin_id	id	The ID of the check-in.
coords	struct	The latitude and longitude of the location.
message	string	The message the author posted with the checkin.
post_id	string	The ID of the stream post created by the check-in
tagged_uids	array<id>	The IDs of users tagged in the checkin.
target_id	id	The ID of Event or Page the user is checking into.
target_type	string	The type of the target for the checkin. This can beevent or page
timestamp	timestamp	A UNIX timestamp of the checkin.

--- connection ---
is_following	bool	Indicates whether the source is connected to the target Page (for example, if the source is a supporter or fan). Will be false if the user has hidden the friend or target's news feed.
source_id	id	The ID of the user, the source of the connection.
target_id	id	The target(s) of the connection. The ID of the friend or Facebook Page with whom the specified user is either a friend or fan/supporter.
target_type	string	Indicates whether the target is a user or a page.

--- event ---
all_members_count	unsigned int32	The number of invitees to the event
app_id	numeric string	The application used to create the event
attending_count	unsigned int32	The number of invitees who have accepted the event invite
can_invite_friends	bool	Whether the viewer can invite friends to the event
creator	id	Creator of the event
creator_cursor	string	The cursor for the creator index
declined_count	unsigned int32	The number of invitees who have declined the event invite
description	string	Description of the event
eid	id	ID of the event
end_time	string	End time of the event (UNIX timestamp)
feed_targeting	struct	News Feed targeting data of an event
has_profile_pic	bool	Whether the event has a profile picture
hide_guest_list	bool	Whether the guest list is hidden for the event
host	string	Host of the event
is_date_only	bool	Whether the event only has a date specified
location	string	Location of the event
name	string	Name of the event
not_replied_count	unsigned int32	The number of invitees who have not yet replied to the event invite
parent_group_id	numeric string	The group the event belongs to
pic	string	Event picture
pic_big	string	Large event picture
pic_cover	struct	Cover picture of Event
pic_small	string	Small event picture
pic_square	string	Square event picture
privacy	string	Privacy of the event
start_time	string	Start time of the event (UNIX timestamp)
ticket_uri	string	The link users can visit to buy a ticket to the event
timezone	string	Timezone of the event
unsure_count	unsigned int32	The number of invitees who have responded maybe to the event invite
update_time	timestamp	Last update time of the event (UNIX timestamp)
venue	struct	Venue hosting the event
version	unsigned int32	Version of the event

--- event_member ---
eid	id	The ID of the event being queried.
eid_cursor	string	Cursor for the eid field.
inviter	id	The user ID of the person who invited the user in the uid field.
inviter_type	string	The type of the object in the inviter field. Allowed values are: 'page' or 'user'
rsvp_status	string	The reply status of the user for the event being queried. There are four possible return values: attending, unsure, declined, and not_replied.
start_time	string	An ISO-8601 string representing the starting date and (optionally) time of the event being queried. This is particularly useful as a WHERE filter to speed up your query when querying for one or more user's events. But it cannot be used when querying for users invited to a particular event. Note - before the 'Events Timezone' migration, this field was a timestamp. See 'Events Timezone Migration Note' above for more information.
uid	id	The user ID of the user for the event being queried.
uid_cursor	string	Cursor for the uid field.

--- group ---
creator	id	The user ID of the user who created the group being queried.
description	string	The description of the group being queried.
email	string	The email address to upload content to the group being queried. Note that only an existing members of the group will be able to use this email address to upload content.)
gid	id	The group ID of the group being queried.
icon	string	The URL of the bookmark icon for the group being queried. The maximum dimensions will be 16px height and 16px width.
icon34 string	The URL of the bookmark icon for the group being queried. The maximum dimensions will be 34px height and 34px width. If a 34x34 size icon is unavailable this field will have the same value as icon)
icon50 string	The URL of the bookmark icon for the group being queried. The maximum dimensions will be 50px height and 50px width. If a 50x50 size icon is unavailable this field will have the same value as icon)
icon68 string	The URL of the bookmark icon for the group being queried. The maximum dimensions will be 68px height and 68px width. If a 68x68 size icon is unavailable this field will have the same value as icon)
name	string	The name of the group being queried.
nid	unsigned int32	The network ID for the network to which the group being queried belongs, if any.
office	string	The location of the office of the group being queried.
parent_id	numeric string	The parent id of the group.
pic	string	The medium-sized photo for the group being queried. The image can have a maximum width of 100px and a maximum height of 300px. This URL may be blank.
pic_big	string	The largest-sized photo for the group being queried. The image can have a maximum width of 200px and a maximum height of 600px. This URL may be blank.
pic_cover	struct	The cover picture of the group.
pic_small	string	The URL to the smallest-sized photo for the group being queried. The image can have a maximum width of 50px and a maximum height of 150px. This URL may be blank.
pic_square	string	The URL to the square profile picture for the groupbeing queried. The image can have a maximum widdth of 50px and amaximum height of 50px. This URL may be blank.
privacy	string	The privacy setting of the group being queried, indicating whether the group is OPEN, CLOSED, or SECRET.
recent_news	string	The contents of the Recent News field of the group being queried.
update_time	timestamp	The last time the group being queried was updated.
venue	struct	The venue of the group being queried. This is an object containing street, city, state, country, zip, latitude, and longitude fields.
website	string	The URL for the Web site of the group being queried.

--- group_member ---
administrator	bool	Returns true if the user is an administrator of the group.
bookmark_order	unsigned int32	The order in which the group appears in the user's list of groups. This field requires the user_groups permission, and is only present when you query by uid
gid	numeric string	The ID of the group being queried.
positions	array<string>	Any positions taken by the member of the group being queried. Possible values are OWNER, ADMIN or OFFICER
uid	numeric string	The user ID of the member of the group being queried.
unread	unsigned int32	A count of items in this group which have not been read by the user. This field requires the user_groups permission, and is only present when you query by uid

--- location_post ---
app_id	id	ID of the application that published the post
author_uid	id	ID of person publishing the post
coords	struct	Coordinates of the checkin location
id	id	ID of the object associated with this location
latitude	float	Latitude of the checkin location
longitude	float	Longitude of the checkin location
message	string	Message of the post story
page_id	id	ID of the Facebook page associated with the location or event in the post
page_type	string	Type of the target. For example, page and event
post_id	string	ID of the post story
tagged_uids	object<string, id>	IDs of users tagged in the checkin
timestamp	timestamp	UNIX timestamp of the checkin
type	string	The type of post. Either photo, checkin, video, or status

--- note ---
comment_info	struct	The comment information of the note being queried. This is an object containing can_comment and comment_count.
content	string	The body of the note in plaintext.
content_html	string	The body of the note with HTML tags.
created_time	timestamp	The time the user created the note as a UNIX timestamp.
like_info	struct	The like information of the note being queried. This is an object containing can_like, like_count, and user_likes.
note_id	string	The unique identifier for the note.
title	string	The title of the note.
uid	id	The user ID of the current user.
uid_cursor	string	Cursor for the uid field.
updated_time	timestamp	The most recent time the user edited the note as a UNIX timestamp.
Examples	SELECT ... FROM note WHERE note_id = A

--- photo ---
aid	string	The ID of the album containing the photo being queried. The aid cannot be longer than 50 characters. Note: Because the aid is a string, you should always wrap the aid in quotes when referenced in a query.
aid_cursor	string	A cursor used to paginated through a query that is indexed on the aid
album_object_id	id	The object_id of the album the photo belongs to.
album_object_id_cursor	string	A cursor used to paginate through a query that is indexed on the album_object_id
backdated_time	timestamp	The time the photo was backdated to in Timeline
backdated_time_granularity	enum	A string representing the backdated granularity. Valid values are year, month, day, hour, or minute
can_backdate	bool	true if the viewer is able to backdate the photo
can_delete	bool	true if the viewer is able to delete the photo
can_tag	bool	true if the viewer is able to tag the photo
caption	string	The caption for the photo being queried.
caption_tags	object<string, list>	An array indexed by offset of arrays of the tags in the caption of the photo, containing the id of the tagged object, the name of the tag, the offset of where the tag occurs in the message and the length of the tag.
comment_info	struct	The comment information of the photo being queried. This is an object containing can_comment and comment_count
created	timestamp	The date when the photo being queried was added.
images	array<object>	An array of objects containing width, height, source each representing the various photo sizes.
like_info	struct	The like information of the photo being queried. This is an object containing can_like, like_count, and user_likes
link	string	The URL to the page containing the photo being queried.
modified	timestamp	The date when the photo being queried was last modified.
object_id	id	The object_id of the photo.
offline_id	number	The offline_id is specificed when uploading a photo to track the upload status of it later
owner	id	The user ID of the owner of the photo being queried.
owner_cursor	string	A cursor used to paginate through a query that is indexed on the owner
page_story_id	string	The ID of the feed story about this photo if itbelongs to a page
pid	string	The ID of the photo being queried. The pid cannot be longer than 50 characters. Note: Because the pid is a string, you should always wrap the pid in quotes when referenced in a query.
place_id	id	Facebook ID of the place associated with the photo, if any.
src	string	The URL to the album view version of the photo being queried. The image can have a maximum width or height of 130px. This URL may be blank.
src_big	string	The URL to the full-sized version of the photo being queried. The image can have a maximum width or height of 720px, increasing to 960px on 1st March 2012. This URL may be blank.
src_big_height	unsigned int32	Height of the full-sized version, in px. This field may be blank.
src_big_webp	string	WebP format version of src_big URL.
src_big_width	unsigned int32	Width of the full-sized version, in px. This field may be blank.
src_height	unsigned int32	Height of the album view version, in px. This field may be blank.
src_small	string	The URL to the thumbnail version of the photo being queried. The image can have a maximum width of 75px and a maximum height of 225px. This URL may be blank.
src_small_height	unsigned int32	Height of the thumbnail version, in px. This field may be blank.
src_small_webp	string	WebP format version of src_small URL.
src_small_width	unsigned int32	Width of the thumbnail version, in px. This field may be blank.
src_webp	string	WebP format version of src URL.
src_width	unsigned int32	Width of the album view version, in px. This field may be blank.
target_id	numeric string	The ID of the target the photo is posted to
target_type	string	The type of target the photo is posted to

--- photo_src ---
height	unsigned int32	The height of the bounding box of the photo, in pixels. Note that this is not the height of the photo itself; please see the photo table for information on how to retrieve the dimensions of the photo itself
photo_id	string	The ID of the photo being queried
size	string	A string representing the max size of the image returned. For example, 640X640. Note: If you want an exact dimension, use width and height
src	string	URL of the photo
width	unsigned int32	The width of the bounding box of the photo, in pixels. Note that this is not the width of the photo itself; please see the photo table for information on how to retrieve the dimensions of the photo itself

--- photo_tag ---
created	timestamp	The date that the tag being queried was created (UNIX timestamp)
object_id	id	The object ID of the photo being queried. Preferred over pid
pid	string	The ID of the photo being queried. The pid cannot be longer than 50 characters. Note: Because the pid is a string, you should always wrap the pid in quotes when referenced in a query
subject	string	The ID of the object that is tagged, e.g. user, group, and event. For photos associated with events or groups, use the eid or gid for subject
text	string	The content of the tag being queried. It contains either the name of the user tagged or the text tag
xcoord	float	The center of the tag's horizontal position, measured as a floating-point percentage from 0 to 100, from the left edge of the photo
ycoord	float	The center of the tag's vertical position, measured as a floating-point percentage from 0 to 100, from the top edge of the photo

--- question ---
created_time	timestamp	Time the question was created (UNIX timestamp)
id	id	The question ID
is_published	bool	Whether the question has been published
owner	id	ID of the user who created the question
question	string	Text of the question
updated_time	timestamp	Time the question was was last modified (UNIX timestamp)

--- url_like ---
url	string	The URL that was liked
user_id	string	The ID of the user who has liked the URL

--- video ---
album_id	id	The ID of the album where the video belongs to
created_time	timestamp	The date when the video being queried was added.
description	string	The description of the video being queried.
embed_html	string	The HTML code to embed the video.
format	array<object>	An array of various video formats available with their embed_html code and resolution
length	float	The length of the video in seconds.
link	string	The URL to the video being queried.
owner	id	The user ID of the owner of the video being queried.
src	string	The URL to thesource file for the standard quality version of the video.
src_hq	string	The URL to the source file for the high quality version of the video.
thumbnail_link	string	The URL to the thumbnail image for the video being queried. This URL may be blank.
title	string	The name of the video being queried.
updated_time	timestamp	The date when the video being queried was last modified.
vid	id	The ID of the video being queried. Note: Because the vid is a string, you should always wrap the vid in quotes when referenced in a query. The vid is unique only for a given user. You can use the vid as an object ID in the Graph API.

--- video_tag ---
created_time	timestamp	The date when the video being queried was added.
subject	numeric string	For tagged users, use the user ID of the subject for the tag being queried. For videos associated with events or groups, use the event ID or group ID for subject.
updated_time	timestamp	The date when the video being queried was last modified.
vid	numeric string	The ID of the video being queried. The vid cannot be longer than 50 characters. Note: Because the vid is a string, you should always wrap the vid in quotes when referenced in a query.

